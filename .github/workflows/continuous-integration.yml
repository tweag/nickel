name: Continuous integration
on:
  push:
    branches:
      - master
  pull_request:


jobs:
  build-and-test:

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        rust_channel:
          - stable
        include:
          - os: ubuntu-latest
            system: x86_64-linux
            experimental: false
          - os: macos-latest
            system: x86_64-darwin
            experimental: false

    runs-on: ${{ matrix.os }}
    # The `== true` makes it work wether experimental has been defined or not.
    continue-on-error: ${{ matrix.experimental == true }}

    steps:

    - name: Checking out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Installing Nix
      uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: tweag-nickel
        authToken: '${{ secrets.CACHIX_TWEAG_NICKEL_AUTH_TOKEN }}'

    - name: Run all checks
      run: |
        nix flake check --print-build-logs

    - name: Compile and typecheck benchmarks
      run: |
        nix develop --accept-flake-config
        cargo bench --no-run

        nix shell --accept-flake-config
        find benches -type f -name "*.ncl" -print0 | xargs -0 -I file nickel -f file typecheck
