name: Upload release artifacts
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_tag:
        description: "The release tag to target"

permissions:
  contents: write

jobs:
  docker-image:
    name: "Build docker image"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        name: "Installing Nix"
        with:
          extra_nix_config: "experimental-features = nix-command flakes"
          nix_path: "nixpkgs=channel:nixos-unstable"
      - name: "Build docker image"
        run: |
          nix build --print-build-logs .#dockerImage
          cp ./result nickel-docker-image.tar.gz
      - name: "Upload docker image as release asset"
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ github.event_name == 'release' && github.event.release.tag_name || github.event.inputs.release_tag }}
        run: |
          gh release upload --clobber $RELEASE_TAG nickel-docker-image.tar.gz

  static-binary:
    name: "Build Nickel release binary"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        name: "Installing Nix"
        with:
          extra_nix_config: "experimental-features = nix-command flakes"
          nix_path: "nixpkgs=channel:nixos-unstable"
      - name: "Build x86_64 static binary"
        run: |
          nix build --print-build-logs .#nickel-static
          cp ./result nickel-x86_64-linux
      - name: "Upload docker image as release asset"
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ github.event_name == 'release' && github.event.release.tag_name || github.event.inputs.release_tag }}
        run: |
          gh release upload --clobber $RELEASE_TAG nickel-x86_64-linux
