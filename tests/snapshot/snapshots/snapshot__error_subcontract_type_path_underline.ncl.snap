---
source: tests/snapshot/main.rs
expression: snapshot
---
error: contract broken by a function
  ┌─ [INPUTS_PATH]/errors/subcontract_type_path_underline.ncl:1:37
  │
1 │ let val | Array (Array {foo: Dyn -> Number }) = [
  │                                     ------ expected return type
2 │   [],
3 │   [{ foo = fun x => "string" }]
  │                     -------- evaluated to this expression
  │
  ┌─ <unknown> (generated by evaluation):1:1
  │
1 │ "string"
  │ -------- evaluated to this value
  │
  = This error may happen in the following situation:
        1. A function `f` is bound by a contract: e.g. `Bool -> Number`.
        2. `f` returns a value of the wrong type: e.g. `f = fun c => "string"` while `Number` is expected.
  = Either change the contract accordingly, or change the return value of `f`


