searchState.loadedDescShard("bitmaps", 0, "This crate provides the <code>Bitmap</code> type as a convenient and …\nA trait that defines generalised operations on a …\nA compact array of bits.\nA type level number signifying the number of bits in a …\nAn iterator over the indices in a bitmap which are <code>true</code>.\nA primitive integer type suitable for storing this many …\nThe number of bits\nGet a reference to this bitmap’s backing store.\nThe underlying data type might have some trailing bits, …\nThe underlying data type might have some trailing bits, …\nThe underlying data type might have some trailing bits, …\nThe underlying data type might have some trailing bits, …\nFind the index of the first <code>false</code> bit in the bitmap.\nFind the index of the first <code>true</code> bit in the bitmap.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a bitmap from a value of the same type as its …\nGet the value of the bit at a given index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this bitmap into a value of the type of its …\nInvert all the bits in the bitmap.\nTest if the bitmap contains only <code>false</code> bits.\nTest if the bitmap contains only <code>true</code> bits.\nFind the index of the last <code>false</code> bit in the bitmap.\nFind the index of the last <code>true</code> bit in the bitmap.\nCount the number of <code>true</code> bits in the bitmap.\nConstruct a bitmap where every bit with index less than …\nConstruct a bitmap with every bit set to <code>false</code>.\nFind the index of the first <code>false</code> bit in the bitmap after …\nFind the index of the first <code>true</code> bit in the bitmap after …\nFind the index of the first <code>false</code> bit in the bitmap before …\nFind the index of the last <code>true</code> bit in the bitmap before …\nSet the value of the bit at a given index.")