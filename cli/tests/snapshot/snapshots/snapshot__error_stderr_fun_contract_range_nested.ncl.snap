---
source: tests/snapshot/main.rs
expression: err
---
error: contract broken by a function
  ┌─ [INPUTS_PATH]/errors/fun_contract_range_nested.ncl:5:59
  │
5 │ let Foo = { foo : Number } in %force% (((fun x => { foo = "a" }) | Dyn -> Foo) null)
  │                                                           ---             --- expected return type
  │                                                           │                
  │                                                           evaluated to this expression
  │
  ┌─ <unknown> (generated by evaluation):1:1
  │
1 │ "a"
  │ --- evaluated to this value
  │
  = This error may happen in the following situation:
        1. A function `f` is bound by a contract: e.g. `Bool -> Number`.
        2. `f` returns a value of the wrong type: e.g. `f = fun c => "string"` while `Number` is expected.
  = Either change the contract accordingly, or change the return value of `f`


